version: 2.1
jobs:
 
 build:
   docker:
     - image: python:3.7.3-stretch

   working_directory: ~/app

   steps:
     - checkout
     - restore_cache:
         keys:
           - v1-dependencies-{{ checksum "requirements.txt" }}
           - v1-dependencies-

     - run:
        name: install dependencies
        command: |
         python3 -m venv venv
         . venv/bin/activate
         make install
         wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
         chmod +x /bin/hadolint
     - save_cache:
        paths:
         - ./venv
        key: v1-dependencies-{{ checksum "requirements.txt" }}

# run lint!
     - run:
        name: run lint
        command: |
         . venv/bin/activate
           make lint 

 build-image:
   environment:
     IMAGE_NAME: josephjoy038/caprepo
   docker:
     - image: circleci/buildpack-deps:stretch
   working_directory: ~/app
   
   steps:
     - checkout
     - setup_remote_docker
     - run:
         name: Build Docker image
         command: |
           docker build -t $IMAGE_NAME:latest .
     - run:
         name: Archive Docker image
         command: docker save -o image.tar $IMAGE_NAME
     - persist_to_workspace:
         root: ~/app
         paths:
           - .

 publish-image:
   environment:
     IMAGE_NAME: josephjoy038/caprepo
   docker:
     - image: circleci/buildpack-deps:stretch
 
   steps:
      - attach_workspace:
          at: ~/app
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i ~/app/image.tar
      - run:
          name: Publish Docker Image.
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASS"
            docker push $IMAGE_NAME:latest 
 
 blue-k8-setup-deploy:
   environment:
     CLUSTER_NAME: capstone-eks
     AWS_DEFAULT_REGION: us-west-1

   docker:
     - image: python:3.7.3-stretch
    
   steps:
      - run:
         name: Install aws-iam-authenticator
         command: |
           curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
           chmod +x ./aws-iam-authenticator
           mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
         name: Install kubectl
         command: |
           curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
           chmod +x ./kubectl
           mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Prepare K8S templates
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
            kubectl apply -f blue_eks_deploy.yml --validate=true

workflows:
  version: 2
  test:
    jobs:
      - build
      - build-image:
         requires: 
           - build
      - publish-image:
         requires: 
           - build-image
      - blue-k8-setup-deploy:
          requires:
            - publish-image

